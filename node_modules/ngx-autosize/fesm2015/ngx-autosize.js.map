{"version":3,"file":"ngx-autosize.js.map","sources":["ng://ngx-autosize/lib/autosize.directive.ts","ng://ngx-autosize/lib/autosize.module.ts"],"sourcesContent":["import {\n    ElementRef,\n    HostListener,\n    Directive,\n    Input,\n    NgZone, OnDestroy, OnChanges, AfterContentChecked\n} from '@angular/core';\nimport {fromEvent, ReplaySubject} from 'rxjs';\n\nimport {debounceTime, distinctUntilChanged, takeUntil} from 'rxjs/operators';\n\nconst MAX_LOOKUP_RETRIES = 3;\n\n@Directive({\n    selector: '[autosize]'\n})\n\nexport class AutosizeDirective implements OnDestroy, OnChanges, AfterContentChecked {\n    @Input() minRows: number;\n    @Input() maxRows: number;\n    @Input() onlyGrow = false;\n    @Input() useImportant = false;\n\n    private retries = 0;\n    private textAreaEl: any;\n\n    private _oldContent: string;\n    private _oldWidth: number;\n\n    private _destroyed$ = new ReplaySubject(1);\n\n    @HostListener('input', ['$event.target'])\n    onInput(textArea: HTMLTextAreaElement): void {\n        this.adjust();\n    }\n\n    constructor(\n        public element: ElementRef,\n        private _zone: NgZone\n    ) {\n        if (this.element.nativeElement.tagName !== 'TEXTAREA') {\n            this._findNestedTextArea();\n\n        } else {\n            this.textAreaEl = this.element.nativeElement;\n            this.textAreaEl.style.overflow = 'hidden';\n            this._onTextAreaFound();\n        }\n    }\n\n    ngOnDestroy() {\n        this._destroyed$.next(true);\n        this._destroyed$.complete();\n    }\n\n    ngAfterContentChecked() {\n        this.adjust();\n    }\n\n    ngOnChanges(changes) {\n        this.adjust(true);\n    }\n\n    _findNestedTextArea() {\n        this.textAreaEl = this.element.nativeElement.querySelector('TEXTAREA');\n\n        if (!this.textAreaEl && this.element.nativeElement.shadowRoot) {\n            this.textAreaEl = this.element.nativeElement.shadowRoot.querySelector('TEXTAREA');\n        }\n\n        if (!this.textAreaEl) {\n            if (this.retries >= MAX_LOOKUP_RETRIES) {\n                console.warn('ngx-autosize: textarea not found');\n\n            } else {\n                this.retries++;\n                setTimeout(() => {\n                    this._findNestedTextArea();\n                }, 100);\n            }\n            return;\n        }\n\n        this.textAreaEl.style.overflow = 'hidden';\n        this._onTextAreaFound();\n\n    }\n\n    _onTextAreaFound() {\n        this._zone.runOutsideAngular(() => {\n            fromEvent(window, 'resize')\n                .pipe(\n                    takeUntil(this._destroyed$),\n                    debounceTime(200),\n                    distinctUntilChanged()\n                )\n                .subscribe(() => {\n                    this._zone.run(() => {\n                        this.adjust();\n                    });\n                });\n        });\n        setTimeout(() => {\n            this.adjust();\n        });\n    }\n\n    adjust(inputsChanged = false): void {\n        if (this.textAreaEl) {\n\n            const currentText = this.textAreaEl.value;\n\n            if (\n                inputsChanged === false &&\n                currentText === this._oldContent &&\n                this.textAreaEl.offsetWidth === this._oldWidth\n            ) {\n                return;\n            }\n\n            this._oldContent = currentText;\n            this._oldWidth = this.textAreaEl.offsetWidth;\n\n            const clone = this.textAreaEl.cloneNode(true);\n            const parent = this.textAreaEl.parentNode;\n            clone.style.visibility = 'hidden';\n            parent.appendChild(clone);\n\n            clone.style.overflow = 'auto';\n            clone.style.height = 'auto';\n\n            let height = clone.scrollHeight;\n            const willGrow = height > this.textAreaEl.offsetHeight;\n\n            if (this.onlyGrow === false || willGrow) {\n                const lineHeight = this._getLineHeight();\n                const rowsCount = height / lineHeight;\n\n                let styleAttribute = '';\n\n                if (this.minRows && this.minRows >= rowsCount) {\n                    height = this.minRows * lineHeight;\n\n                } else if (this.maxRows && this.maxRows <= rowsCount) {\n                    height = this.maxRows * lineHeight;\n                    styleAttribute += 'overflow: auto;';\n\n                } else {\n                    styleAttribute += 'overflow: hidden;';\n                }\n\n                styleAttribute += `height: ${height}px`;\n\n                styleAttribute += this.useImportant ? '!important;' : ';';\n\n                this.textAreaEl.setAttribute('style', styleAttribute);\n            }\n\n            parent.removeChild(clone);\n        }\n    }\n\n    private _getLineHeight() {\n        let lineHeight = parseInt(this.textAreaEl.style.lineHeight, 10);\n        if (isNaN(lineHeight) && window.getComputedStyle) {\n            const styles = window.getComputedStyle(this.textAreaEl);\n            lineHeight = parseInt(styles.lineHeight, 10);\n        }\n\n        if (isNaN(lineHeight)) {\n            const fontSize = window.getComputedStyle(this.textAreaEl, null).getPropertyValue('font-size');\n            lineHeight = Math.floor(parseInt(fontSize.replace('px', ''), 10) * 1.5);\n        }\n\n        return lineHeight;\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { AutosizeDirective } from './autosize.directive';\n\n@NgModule({\n  declarations: [AutosizeDirective],\n  imports: [\n  ],\n  exports: [AutosizeDirective]\n})\nexport class AutosizeModule { }\n"],"names":[],"mappings":"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"}
