{"version":3,"file":"ngx-dropdown-list.umd.js.map","sources":["node_modules/tslib/tslib.es6.js","ng://ngx-dropdown-list/src/ngx-dropdown-list/utils/util.ts","ng://ngx-dropdown-list/src/ngx-dropdown-list/dropdown-list.component.ts","ng://ngx-dropdown-list/src/ngx-dropdown-list/item/item.component.ts","ng://ngx-dropdown-list/src/ngx-dropdown-list/group-item/group-item.component.ts","ng://ngx-dropdown-list/src/ngx-dropdown-list/filter/input-filter.component.ts","ng://ngx-dropdown-list/src/ngx-dropdown-list/anchor/anchor.component.ts","ng://ngx-dropdown-list/src/ngx-dropdown-list/dropdown/dropdown.component.ts","ng://ngx-dropdown-list/src/ngx-dropdown-list/dropdown-list.module.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","/**\r\n * check whether the provided items contains group\r\n */\r\nexport function hasGroup(items): boolean {\r\n  return items ? (items.find(item => item.group) != null) : false;\r\n}\r\n\r\n/**\r\n * clear all selections from the provide items.\r\n * @param items the dropdown items, can be group or item\r\n */\r\nexport function clearAllSelection(items: any): void {\r\n  if (hasGroup(items)) {\r\n    for (const groupItem of items) {\r\n      if (groupItem.items) {\r\n        groupItem.items.filter(item => item.selected).forEach(item => item.selected = false);\r\n      }\r\n    }\r\n  } else {\r\n    // clear the selection of previous selected item\r\n    items.filter(item => item.selected).forEach(item => item.selected = false);\r\n  }\r\n}\r\n\r\n/**\r\n * stop all propagation and default actions\r\n */\r\nexport function stopPropagationAndDefault(event: Event): void {\r\n  event.stopImmediatePropagation();\r\n  event.stopPropagation();\r\n  event.preventDefault();\r\n}\r\n\r\n/**\r\n * check whether the provided value is number of not\r\n */\r\nexport function isNumber(value: any): boolean {\r\n  return !(value == null || isNaN(value) || value.length === 0);\r\n}\r\n\r\n/**\r\n * get the selected item from the items list (including item and group)\r\n */\r\nexport function getFirstSelectedItem(items: any): any {\r\n  if (!items) {\r\n    return undefined;\r\n  }\r\n  let selectedItem;\r\n  if (hasGroup(items)) {\r\n    for (const item of items) {\r\n      selectedItem = item.items ? item.items.find(subItem => subItem.selected) : undefined;\r\n      if (selectedItem) {\r\n        break;\r\n      }\r\n    }\r\n  } else {\r\n    selectedItem = items ? items.find(item => item.selected) : undefined;\r\n  }\r\n  return selectedItem;\r\n}\r\n","import {Component, ElementRef, EventEmitter, Input, Output, ViewChild} from '@angular/core';\nimport {clearAllSelection, getFirstSelectedItem, stopPropagationAndDefault} from './utils/util';\n\n@Component({\n  selector: 'ngx-dropdown-list',\n  template: `\n    <span class=\"ngx-select\">\n        <anchor (anchorClick)=\"onAnchorClick($event)\" (clearanceClick)=\"onClearanceClick($event)\"\n                [checkbox]=\"multiSelection\"\n                [formatNumber]=\"formatNumber\"\n                [suffixText]=\"suffixText\"\n                [placeHolder]=\"placeHolder\"\n                [allowClear]=\"allowClear\"\n                [openStatus]=\"dropdownVisibility\"\n                [selectedText]=\"selectedText\"\n                [disabled]=\"disabled\">\n        </anchor>\n        <dropdown #dropdown (dropdownBlur) = \"onItemsBlur()\" (selectionChange)=\"onSelectionChange($event)\"\n                [items]=\"items\"\n                [checkbox]=\"multiSelection\"\n                [filterBox]=\"filterBox\"\n                [formatNumber]=\"formatNumber\"\n                [suffixText]=\"suffixText\"\n                [(selectedValue)]=\"selectedValue\"\n                (itemClick) = \"onItemClick()\"\n                [disabled]=\"disabled\">\n        </dropdown>\n    </span>\n  `,\n  styleUrls: ['./dropdown-list.component.scss'],\n})\n\nexport class DropdownListComponent {\n  @ViewChild('dropdown', { read: ElementRef }) dropdownRef: ElementRef;\n\n  /**\n   * bind to [placeHolder] for displaying the place holder string of the anchor.\n   */\n  @Input() placeHolder: string;\n  /**\n   * bind to [items] for the options/groups in the dropdown\n   */\n  @Input() items: any[];\n  /**\n   * bind to [multiSelection], the flag for multi-select (checkbox) mode.\n   */\n  @Input() multiSelection = false;\n  /**\n   * bind to [selectedValue] for the value of the selected option from dropdown\n   */\n  @Input() selectedValue: any;\n  /**\n   * bind to [filterBox] for displaying the filter input text box\n   */\n  @Input() filterBox = false;\n  /**\n   * bind to [suffixText] for displaying the suffix of the selected text of anchor\n   */\n  @Input() suffixText: string;\n  /**\n   * bind to [disabled] for disabling the dropdown\n   */\n  @Input() disabled: boolean;\n  /**\n   * bind to [allowClear] for enabling the clearance (clearance is not avaiable when checkbox is enabled)\n   */\n  @Input() allowClear = true;\n  /**\n   * bind to [formatNumber] for show formatted number text\n   */\n  @Input() formatNumber = false;\n  /**\n   * for 2-way binding of [selectedValue], using async event to\n   * prevent \"ExpressionChangedAfterItHasBeenCheckedError\".\n   */\n  @Output() selectedValueChange = new EventEmitter<string>(true);\n  /**\n   * [selectionChange] event that will be triggered when changing of the selection.\n   * Using async event to prevent \"ExpressionChangedAfterItHasBeenCheckedError\".\n   */\n  @Output() selectionChange = new EventEmitter<any>(true);\n\n  /**\n   * visibility flag of drop down\n   */\n  dropdownVisibility = false;\n\n  /**\n   * current selected text\n   */\n  get selectedText(): any {\n    if (!this.multiSelection) {\n      const selectedItem = getFirstSelectedItem(this.items);\n      return selectedItem ? selectedItem.text : undefined;\n    }\n  }\n\n  /**\n   * triggered with (selectionChange) event, emits (selectedValueChange) and (selectionChange)\n   */\n  onSelectionChange(event) {\n    this.selectedValueChange.emit(event);\n    this.selectionChange.emit(event);\n  }\n\n  /**\n   * triggered with (anchorClick) event, controlling the \"open\" and \"close\" of the dropdown\n   */\n  onAnchorClick(event: Event): void {\n    if (this.disabled) {\n      stopPropagationAndDefault(event);\n      return;\n    }\n    if (this._isSelectionOpen()) {\n      this._hideItemList();\n    } else {\n      this._showItemsList();\n    }\n    stopPropagationAndDefault(event);\n  }\n\n  /**\n   * triggered with (itemClick) event, closes the dropdown in non-checkbox mode\n   */\n  onItemClick(): void {\n    if (!this.multiSelection) {\n      this._hideItemList();\n    }\n  }\n\n  /**\n   * triggered with (clearanceClick) event, clearing all selections\n   * and emits (selectedValueChange) and (selectionChange) event for empty value\n   */\n  onClearanceClick(event: Event): void {\n    if (!this.multiSelection) {\n      this.selectedValue = void 0;\n      this.selectedValueChange.emit(undefined);\n      this.selectionChange.emit(undefined);\n      clearAllSelection(this.items);\n    }\n    stopPropagationAndDefault(event);\n  }\n\n  /**\n   * triggered with (dropdownBlur) event, closes the dropdown\n   */\n  onItemsBlur(): void {\n    if (this._isSelectionOpen()) {\n      this._hideItemList();\n    }\n  }\n\n  /**\n   * close the dropdown\n   */\n  private _hideItemList(): void {\n    // hide the dropdown element (has some problem for using CSS directly, using this as a workaround)\n    this._dropdownElement.classList.remove('visible');\n    this._dropdownElement.style.display = 'none';\n    this.dropdownVisibility = false;\n  }\n\n  /**\n   * open the dropdown\n   */\n  private _showItemsList(): void {\n    // display the dropdown element (has some problem for using CSS directly, using this as a workaround)\n    this._dropdownElement.classList.add('visible');\n    this._dropdownElement.style.display = 'block';\n\n    this.dropdownVisibility = true;\n\n    // scrolling to the selected item\n    if (this._selectedElement) {\n      this._selectedElement.scrollIntoView({ behavior: 'instant', block: 'center' });\n    }\n\n    // setting the focus\n    if (this.filterBox && !this.multiSelection) {\n      this._filterInputElement.focus();\n    } else {\n      this._dropdownElement.focus();\n    }\n  }\n\n  /**\n   * visibility status of dropdown\n   */\n  private _isSelectionOpen(): boolean {\n    return this.dropdownVisibility;\n  }\n\n  /**\n   * get the real dropdown element (for focusing and visibility controlling), the <span> not the <dropdown>\n   */\n  private get _dropdownElement(): any {\n    return this.dropdownRef ? this.dropdownRef.nativeElement ? this.dropdownRef.nativeElement.firstElementChild : null : null;\n  }\n\n  /**\n   * get the real filter element (for focusing), the <input> not the <input-filter>\n   */\n  private get _filterInputElement(): any {\n    return this._dropdownElement ?\n      this._dropdownElement.firstElementChild ? this._dropdownElement.firstElementChild.firstElementChild : null : null;\n  }\n\n  /**\n   * get the HTMLElement of selected item, for doing (scrollIntoView) scrolling to the selected item\n   */\n  private get _selectedElement(): HTMLElement {\n    const selectedItem = getFirstSelectedItem(this.items);\n    return selectedItem ? document.getElementById(selectedItem.id) as HTMLElement : undefined;\n  }\n}\n","import {Component, EventEmitter, Input, Output} from '@angular/core';\nimport {SelectionItem} from '../types';\nimport {isNumber} from '../utils/util';\n\n@Component({\n  selector: 'item',\n  template: `\n    <label [class.container-checkbox]=\"checkbox\"\n           [class.container-selection]=\"!checkbox && !item.selected\"\n           [class.container-selection-selected]=\"!checkbox && item.selected\"\n           [id]=\"item.id\" (mousedown)=\"onItemClick(item)\">\n      {{needFormatNumber(item.text)? (item.text | number:'1.0-2') : item.text}}{{suffixText? suffixText : ''}}\n      <ng-container *ngIf=\"checkbox\">\n        <input type='checkbox' [id]=\"'checkbox-'+item.text\" (change)=\"onCheckStatusChange(item)\" [checked]=\"item.selected\">\n        <span class=\"checkmark\" [id]=\"'checkmark-'+item.text\"></span>\n      </ng-container>\n    </label>`,\n  styleUrls: ['./item.component.scss']\n})\n\nexport class ItemComponent {\n  /**\n   * bind to [checkbox], the flag of checkbox mode\n   */\n  @Input() checkbox: boolean;\n  /**\n   * bind to [item], the dropdown option item\n   */\n  @Input() item: SelectionItem;\n  /**\n   * bind to [formatNumber], the flag for formatting the number\n   */\n  @Input() formatNumber = false;\n  /**\n   * bind to [suffixText], the suffixText that will be displayed in the dropdown\n   */\n  @Input() suffixText: string;\n  /**\n   * bind to [itemClick] event, triggers when clicking the item of dropdown\n   */\n  @Output() itemClick = new EventEmitter<string>();\n  /**\n   * bind to [checkStatusChange] event, triggers when check status is changed in checkbox mode.\n   */\n  @Output() checkStatusChange = new EventEmitter<string>();\n\n  /**\n   * check whether needs to format number for the provided text\n   */\n  needFormatNumber(value: any): boolean {\n    return isNumber(value) && this.formatNumber;\n  }\n\n  /**\n   * triggered when clicking the item, emits the [itemClick] event\n   */\n  onItemClick(item) {\n    this.itemClick.emit(item);\n  }\n\n  /**\n   * triggered when checking status changed in checkbox mode, emits the [checkStatusChange] event\n   */\n  onCheckStatusChange(item) {\n    this.checkStatusChange.emit(item);\n  }\n}\n","import {Component, Input} from '@angular/core';\nimport {SelectionGroupItems} from '../types';\n\n@Component({\n  selector: 'group-item',\n  template: `\n    <label class=\"dropdown-item dropdown-item-group\" (mousedown)=\"onItemGroupClick($event)\">{{item.group}}</label>\n  `,\n  styleUrls: ['./group-item.component.scss']\n})\n\nexport class GroupItemComponent {\n  /**\n   * bind to [item], the group item of dropdown\n   */\n  @Input() item: SelectionGroupItems;\n\n  /**\n   * prevent all clicking event from happening\n   */\n  onItemGroupClick(event) {\n    event.stopImmediatePropagation();\n    event.stopPropagation();\n    event.preventDefault();\n  }\n}\n","import {Component, EventEmitter, Input, Output} from '@angular/core';\n\n@Component({\n  selector: 'input-filter',\n  template: `\n    <input type=\"text\" class=\"filter-box\" [(ngModel)]=\"filterValue\" (input)=\"onChange()\" (blur)=\"onFilterTextBlur($event)\">\n  `,\n  styleUrls: ['./input-filter.component.scss']\n})\n\nexport class InputFilterComponent {\n  /**\n   * bind to [filterValue], the value of the filter\n   */\n  @Input() filterValue: string;\n  /**\n   * bind to [inputFilterBlur], emits with (blur) of filter input box\n   */\n  @Output() inputFilterBlur = new EventEmitter<string>();\n  /**\n   * bind to [filterValueChange], for 2-way binding of filterValue\n   */\n  @Output() filterValueChange = new EventEmitter<string>();\n\n  /**\n   * triggers with (blur) event, emits the (inputFilterBlur) event\n   */\n  onFilterTextBlur(event) {\n    this.inputFilterBlur.emit(event);\n  }\n\n  /**\n   * triggers with (input) event, emits the (filterValueChange) event for 2-way binding of filterValue\n   */\n  onChange() {\n    this.filterValueChange.emit(this.filterValue);\n  }\n}\n","import {Component, ElementRef, EventEmitter, Input, Output, ViewChild} from '@angular/core';\nimport {stopPropagationAndDefault, isNumber} from '../utils/util';\nimport {DecimalPipe} from '@angular/common';\n\n@Component({\n  selector: 'anchor',\n  template: `\n    <span #anchor tabindex=\"2\" [ngClass]=\"anchorClass\" (window:resize)=\"onResize()\"\n          (mousedown)=\"onAnchorClick($event)\" (blur)=\"onAnchorBlur($event)\"> {{anchorDisplayText}}\n      <span #selectionClearance class=\"selection-clearance\" (mousedown)=\"onClearanceClick($event)\" *ngIf=\"showClearanceFlag\">&times;</span>\n    </span>\n  `,\n  styleUrls: ['./anchor.component.scss'],\n  providers: [DecimalPipe]\n})\n\nexport class AnchorComponent {\n  /**\n   * Child element reference of anchor\n   */\n  @ViewChild('anchor', { read: ElementRef }) anchorRef: ElementRef;\n\n  /**\n   * bind to [placeHolder] for displaying the place holder string of the anchor.\n   */\n  @Input() placeHolder: string;\n  /**\n   * bind to [checkbox] for checking whether the clearance flag should be shown or not.\n   */\n  @Input() checkbox = false;\n  /**\n   * bind to [suffixText] for displaying the suffix of the selected text of anchor\n   */\n  @Input() suffixText: string;\n  /**\n   * bind to [allowClear] for enabling the clearance (clearance is not avaiable when checkbox is enabled)\n   */\n  @Input() allowClear = true;\n  /**\n   * bind to [formatNumber] for show formatted number text\n   */\n  @Input() formatNumber: boolean;\n  /**\n   * bind to [selectedText] for displaying the selected text on anchor\n   */\n  @Input() selectedText: any;\n  /**\n   * bind to [openStatus], it's the visibility status of dropdown, for showing the arrow on anchor\n   */\n  @Input() openStatus = false;\n  /**\n   * bind to [disabled] for disabling the anchor\n   */\n  @Input() disabled = false;\n  /**\n   * will be triggered when clicking the anchor\n   */\n  @Output() anchorClick = new EventEmitter<any>();\n  /**\n   * will be triggered when clicking the clearance\n   */\n  @Output() clearanceClick = new EventEmitter<any>();\n\n  /**\n   * length of anchor element, used for calculate the string length of the anchor displayed text.\n   */\n  anchorLength: number;\n\n  constructor(private _decimalPipe: DecimalPipe) {}\n\n  /**\n   * flag for showing the clearance flag\n   */\n  get showClearanceFlag(): boolean {\n    return !this.checkbox && this.selectedText && this.allowClear;\n  }\n\n  /**\n   * the text displays on anchor\n   */\n  get anchorDisplayText(): string {\n    let anchorDisplayText =  this.selectedText ? (this.formatNumber ? (isNumber(this.selectedText) ?\n      this._decimalPipe.transform(this.selectedText, '1.0-2') : this.selectedText) :\n      this.selectedText) + (this.suffixText ? this.suffixText : '') : this.placeHolder;\n\n    let charLength = 1;\n    if (this.showClearanceFlag && this.anchorLength > 0) {\n      charLength = Math.floor((this.anchorLength - 50) / 7);\n    } else {\n      charLength = Math.floor((this.anchorLength - 50) / 7);\n    }\n\n    if (anchorDisplayText.length > charLength) {\n      anchorDisplayText = anchorDisplayText.slice(0, charLength - 2) + '...';\n    }\n    return anchorDisplayText;\n  }\n\n  /**\n   * anchor CSS class\n   */\n  get anchorClass(): string {\n    let anchorClassStatusPart;\n    let anchorClassFontColor;\n    if (this.disabled) {\n      anchorClassStatusPart = 'selection-anchor-disabled';\n      anchorClassFontColor = 'place-holder';\n    } else {\n      if (this.openStatus) {\n        anchorClassStatusPart = 'selection-anchor-open';\n      } else {\n        anchorClassStatusPart = 'selection-anchor-close';\n      }\n      if (this.selectedText != null) {\n        anchorClassFontColor = 'selected-item';\n      } else {\n        anchorClassFontColor = 'place-holder';\n      }\n    }\n    return `${anchorClassStatusPart} ${anchorClassFontColor}`;\n  }\n\n  /**\n   * triggered when clicking the anchor\n   */\n  onAnchorClick(event: Event): void {\n    this.anchorClick.emit(event);\n  }\n\n  /**\n   * triggered with (blur) of anchor\n   */\n  onAnchorBlur(event: Event): void {\n    stopPropagationAndDefault(event);\n  }\n\n  /**\n   * triggered when clicking the clearance\n   */\n  onClearanceClick(event: Event): void {\n    this.clearanceClick.emit(event);\n  }\n\n  /**\n   * triggered when resizing, get the clientWidth of anchor\n   */\n  onResize() {\n    this.anchorLength = this.anchorRef ? this.anchorRef.nativeElement ? this.anchorRef.nativeElement.clientWidth : 0 : 0;\n  }\n}\n","import {Component, ElementRef, EventEmitter, Input, OnChanges, Output, SimpleChanges, ViewChild} from '@angular/core';\nimport {clearAllSelection, getFirstSelectedItem, hasGroup, stopPropagationAndDefault} from '../utils/util';\n\n@Component({\n  selector: 'dropdown',\n  template: `\n    <span #dropdown class=\"dropdown\" tabindex=\"3\" (mousedown)=\"onItemsClick($event)\" (blur)=\"onItemsBlur($event)\" *ngIf=\"!disabled\" >\n      <input-filter #filterInput tabindex=\"4\" *ngIf=\"filterBox && !checkbox\" [(filterValue)]=\"filterValue\" (inputFilterBlur)=\"onFilterTextBlur($event)\"></input-filter>\n      <span #selectionOptions [ngClass]=\"optionsClass\">\n        <ng-container *ngFor=\"let item of itemsValues\" >\n          <ng-container *ngIf=\"item && item.group\">\n            <group-item [item]=\"item\"></group-item>\n            <item *ngFor=\"let subItem of item.items\" (itemClick)=\"onItemClick(subItem)\" (checkStatusChange)=\"toggleSelection(subItem)\"\n                  [item]=\"subItem\" [checkbox]=\"checkbox\" [formatNumber]=\"formatNumber\" [suffixText]=\"suffixText\">\n            </item>\n          </ng-container>\n          <ng-container *ngIf=\"item && !item.group\">\n            <item (itemClick)=\"onItemClick(item)\" (checkStatusChange)=\"toggleSelection(item)\"\n                  [item]=\"item\" [checkbox]=\"checkbox\" [formatNumber]=\"formatNumber\" [suffixText]=\"suffixText\">\n            </item>\n          </ng-container>\n        </ng-container>\n      </span>\n    </span>\n  `,\n  styleUrls: ['./dropdown.component.scss']\n})\n\nexport class DropdownComponent implements OnChanges {\n  /**\n   * Child element reference of dropdown\n   */\n  @ViewChild('dropdown', { read: ElementRef }) dropdownRef: ElementRef;\n  /**\n   * Child element reference of filter input text\n   */\n  @ViewChild('filterInput', { read: ElementRef }) filterInputRef: ElementRef;\n  /**\n   * bind to [placeHolder] for displaying the place holder string of the anchor.\n   */\n  @Input() placeHolder: string;\n  /**\n   * bind to [items] for the options/groups in the dropdown\n   */\n  @Input() items: any[];\n  /**\n   * bind to [checkbox], the flag for multi-select (checkbox) mode.\n   */\n  @Input() checkbox = false;\n  /**\n   * bind to [selectedValue] for the value of the selected option from dropdown\n   */\n  @Input() selectedValue: any;\n  /**\n   * bind to [filterBox] for displaying the filter input text box\n   */\n  @Input() filterBox = false;\n  /**\n   * bind to [suffixText] for displaying the suffix of the selected text of anchor\n   */\n  @Input() suffixText: string;\n  /**\n   * bind to [disabled] for disabling the dropdown\n   */\n  @Input() disabled: boolean;\n  /**\n   * bind to [allowClear] for enabling the clearance (clearance is not avaiable when checkbox is enabled)\n   */\n  @Input() allowClear = true;\n  /**\n   * bind to [formatNumber] for show formatted number text\n   */\n  @Input() formatNumber = false;\n  /**\n   * for 2-way binding of [selectedValue]\n   */\n  @Output() selectedValueChange = new EventEmitter<string>(true);\n  /**\n   * [selectionChange] event that will be triggered when changing of the selection\n   */\n  @Output() selectionChange = new EventEmitter<any>(true);\n  /**\n   * [dropdownBlur] event that will be triggered with (blur) of dropdown\n   */\n  @Output() dropdownBlur = new EventEmitter<any>();\n  /**\n   * [itemClick] event that will be triggered when clicking the option of dropdown\n   */\n  @Output() itemClick = new EventEmitter<any>();\n  /**\n   * filter value\n   */\n  filterValue: string;\n  /**\n   * flag of clicking dropdown. It's to prevent (blur) of dropdown from happening in checkbox mode.\n   */\n  private _clickedItems = false;\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.items) {\n      this._checkSelectionChange(changes.items.previousValue, changes.items.currentValue);\n    }\n  }\n\n  /**\n   * triggered when clicking the dropdown\n   */\n  onItemsClick(event: any): void {\n    if (event.offsetX > (event.target.clientWidth + event.target.clientLeft)) {\n      stopPropagationAndDefault(event);\n      return;\n    }\n    // should ignore clicking on filter\n    if (this.checkbox && event.target.type !== 'text') {\n      this._clickedItems = true;\n    }\n  }\n\n  /**\n   * triggered when clicking the item\n   */\n  onItemClick(currentItem): void {\n    if (!this.checkbox) {\n      this.selectedValue = this._getItemValue(currentItem); // currentItem.value != null ? currentItem.value : currentItem.text;\n      clearAllSelection(this.items);\n      // set the selection of current one\n      currentItem.selected = true;\n      this.itemClick.emit(currentItem);\n      this._onSelectionChange(this.selectedValue);\n    }\n  }\n\n  /**\n   * triggers with (blur) event of filter input box\n   */\n  onFilterTextBlur(event): void {\n    this.dropdownBlur.emit(event);\n  }\n\n  /**\n   * triggers with (blur) event of dropdown\n   */\n  onItemsBlur(event): void {\n    if (this.checkbox) {\n      if (this._clickedItems) {\n        // in checkbox mode, this blur event will be ignored when clicking the dropdown (check the checkbox)\n        event.target.focus();\n        this._clickedItems = false;\n        return;\n      }\n    }\n    this.dropdownBlur.emit(event);\n  }\n\n  /**\n   * toggle the selection when checking status changed (in checkbox mode)\n   */\n  toggleSelection(item: {id: string, value?: any, text: any, selected?: boolean}): void {\n    item.selected = !item.selected;\n    this.selectionChange.emit(this._getItemValue(item)); // item.value != null ? item.value : item.text);\n  }\n\n  /**\n   * items values list after applying the filter\n   */\n  get itemsValues(): any[] {\n    let filter;\n    if (this.filterValue) {\n      filter = this.filterValue.toUpperCase();\n    }\n\n    if (filter == null) {\n      return this.items;\n    }\n    if (!this.items || this.items.length === 0) {\n      return [];\n    }\n    if (hasGroup(this.items)) {\n      const items = [];\n      this.items.forEach(groupItem => {\n        if (groupItem.group != null && groupItem.group.toString().toUpperCase().includes(filter)) {\n          // if groupItem contains the filters, the groupItem needs to be displayed as well\n          items.push(groupItem);\n        } else {\n          const filteredItems = groupItem.items.filter(item => item.text != null && item.text.toString().toUpperCase().includes(filter));\n          if (filteredItems && filteredItems.length > 0) {\n            items.push({group: groupItem.group, items: filteredItems});\n          }\n        }\n      });\n      return items;\n    } else {\n      return this.items.filter(item => (item.text != null && item.text.toString().toUpperCase().includes(filter)));\n    }\n  }\n  /**\n   * options CSS class\n   */\n  get optionsClass(): string {\n    if (this.filterBox && !this.checkbox) {\n      return 'options with-filter';\n    } else {\n      return 'options no-filter';\n    }\n  }\n\n  /**\n   * get item value. Return text if value is not available\n   */\n  private _getItemValue(item): any {\n    return item ? item.value != null ? item.value : item.text : undefined;\n  }\n\n  /**\n   * selection changed, emits events: (selectedValueChange) and (selectionChange);\n   */\n  private _onSelectionChange(value) {\n    this.selectedValueChange.emit(value);\n    this.selectionChange.emit(value);\n  }\n\n  /**\n   * check whether the selection is changed. Emits relative events when if changed.\n   */\n  private _checkSelectionChange(previousValue, currentValue) {\n    const curSelectedItem = getFirstSelectedItem(currentValue);\n    const lastSelectedItem = getFirstSelectedItem(previousValue);\n    const curSelectedItemId = curSelectedItem ? curSelectedItem.id : undefined;\n    const lastSelectedItemId = lastSelectedItem ? lastSelectedItem.id : undefined;\n    if (curSelectedItemId !== lastSelectedItemId && !this.checkbox) {\n      this._onSelectionChange(this._getItemValue(curSelectedItem));\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { ItemComponent } from './item/item.component';\r\nimport { GroupItemComponent } from './group-item/group-item.component';\r\nimport { InputFilterComponent } from './filter/input-filter.component';\r\nimport { AnchorComponent } from './anchor/anchor.component';\r\nimport { DropdownComponent } from './dropdown/dropdown.component';\r\nimport { DropdownListComponent } from './dropdown-list.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    DropdownListComponent,\r\n    ItemComponent,\r\n    GroupItemComponent,\r\n    InputFilterComponent,\r\n    AnchorComponent,\r\n    DropdownComponent\r\n  ],\r\n  exports: [ DropdownListComponent],\r\n  imports: [ CommonModule, FormsModule ],\r\n  providers: [],\r\n  bootstrap: [],\r\n})\r\nexport class DropdownListModule {}\r\n"],"names":["tslib_1.__values","EventEmitter","Component","ViewChild","ElementRef","Input","Output","DecimalPipe","NgModule","CommonModule","FormsModule"],"mappings":"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"}
