/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, EventEmitter, Input, Output } from '@angular/core';
var InputFilterComponent = /** @class */ (function () {
    function InputFilterComponent() {
        /**
         * bind to [inputFilterBlur], emits with (blur) of filter input box
         */
        this.inputFilterBlur = new EventEmitter();
        /**
         * bind to [filterValueChange], for 2-way binding of filterValue
         */
        this.filterValueChange = new EventEmitter();
    }
    /**
     * triggers with (blur) event, emits the (inputFilterBlur) event
     */
    /**
     * triggers with (blur) event, emits the (inputFilterBlur) event
     * @param {?} event
     * @return {?}
     */
    InputFilterComponent.prototype.onFilterTextBlur = /**
     * triggers with (blur) event, emits the (inputFilterBlur) event
     * @param {?} event
     * @return {?}
     */
    function (event) {
        this.inputFilterBlur.emit(event);
    };
    /**
     * triggers with (input) event, emits the (filterValueChange) event for 2-way binding of filterValue
     */
    /**
     * triggers with (input) event, emits the (filterValueChange) event for 2-way binding of filterValue
     * @return {?}
     */
    InputFilterComponent.prototype.onChange = /**
     * triggers with (input) event, emits the (filterValueChange) event for 2-way binding of filterValue
     * @return {?}
     */
    function () {
        this.filterValueChange.emit(this.filterValue);
    };
    InputFilterComponent.decorators = [
        { type: Component, args: [{
                    selector: 'input-filter',
                    template: "\n    <input type=\"text\" class=\"filter-box\" [(ngModel)]=\"filterValue\" (input)=\"onChange()\" (blur)=\"onFilterTextBlur($event)\">\n  ",
                    styles: ["*,:after,:before{font-size:inherit;font-weight:inherit;font-family:inherit;box-sizing:inherit;background:inherit}.filter-box{width:calc(100% - 10px);height:28px;border-radius:4px;border:1px solid #ccc;margin:1px 5px 5px;padding-left:5px;font-size:12px;box-sizing:border-box;color:#495057}.filter-box:focus{outline:0;border-color:#ccc}"]
                }] }
    ];
    InputFilterComponent.propDecorators = {
        filterValue: [{ type: Input }],
        inputFilterBlur: [{ type: Output }],
        filterValueChange: [{ type: Output }]
    };
    return InputFilterComponent;
}());
export { InputFilterComponent };
if (false) {
    /**
     * bind to [filterValue], the value of the filter
     * @type {?}
     */
    InputFilterComponent.prototype.filterValue;
    /**
     * bind to [inputFilterBlur], emits with (blur) of filter input box
     * @type {?}
     */
    InputFilterComponent.prototype.inputFilterBlur;
    /**
     * bind to [filterValueChange], for 2-way binding of filterValue
     * @type {?}
     */
    InputFilterComponent.prototype.filterValueChange;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5wdXQtZmlsdGVyLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL25neC1kcm9wZG93bi1saXN0LyIsInNvdXJjZXMiOlsic3JjL25neC1kcm9wZG93bi1saXN0L2ZpbHRlci9pbnB1dC1maWx0ZXIuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUMsU0FBUyxFQUFFLFlBQVksRUFBRSxLQUFLLEVBQUUsTUFBTSxFQUFDLE1BQU0sZUFBZSxDQUFDO0FBRXJFO0lBQUE7Ozs7UUFnQlksb0JBQWUsR0FBRyxJQUFJLFlBQVksRUFBVSxDQUFDOzs7O1FBSTdDLHNCQUFpQixHQUFHLElBQUksWUFBWSxFQUFVLENBQUM7SUFlM0QsQ0FBQztJQWJDOztPQUVHOzs7Ozs7SUFDSCwrQ0FBZ0I7Ozs7O0lBQWhCLFVBQWlCLEtBQUs7UUFDcEIsSUFBSSxDQUFDLGVBQWUsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUM7SUFDbkMsQ0FBQztJQUVEOztPQUVHOzs7OztJQUNILHVDQUFROzs7O0lBQVI7UUFDRSxJQUFJLENBQUMsaUJBQWlCLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxXQUFXLENBQUMsQ0FBQztJQUNoRCxDQUFDOztnQkFsQ0YsU0FBUyxTQUFDO29CQUNULFFBQVEsRUFBRSxjQUFjO29CQUN4QixRQUFRLEVBQUUsNklBRVQ7O2lCQUVGOzs7OEJBTUUsS0FBSztrQ0FJTCxNQUFNO29DQUlOLE1BQU07O0lBZVQsMkJBQUM7Q0FBQSxBQW5DRCxJQW1DQztTQTNCWSxvQkFBb0I7Ozs7OztJQUkvQiwyQ0FBNkI7Ozs7O0lBSTdCLCtDQUF1RDs7Ozs7SUFJdkQsaURBQXlEIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtDb21wb25lbnQsIEV2ZW50RW1pdHRlciwgSW5wdXQsIE91dHB1dH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2lucHV0LWZpbHRlcicsXG4gIHRlbXBsYXRlOiBgXG4gICAgPGlucHV0IHR5cGU9XCJ0ZXh0XCIgY2xhc3M9XCJmaWx0ZXItYm94XCIgWyhuZ01vZGVsKV09XCJmaWx0ZXJWYWx1ZVwiIChpbnB1dCk9XCJvbkNoYW5nZSgpXCIgKGJsdXIpPVwib25GaWx0ZXJUZXh0Qmx1cigkZXZlbnQpXCI+XG4gIGAsXG4gIHN0eWxlVXJsczogWycuL2lucHV0LWZpbHRlci5jb21wb25lbnQuc2NzcyddXG59KVxuXG5leHBvcnQgY2xhc3MgSW5wdXRGaWx0ZXJDb21wb25lbnQge1xuICAvKipcbiAgICogYmluZCB0byBbZmlsdGVyVmFsdWVdLCB0aGUgdmFsdWUgb2YgdGhlIGZpbHRlclxuICAgKi9cbiAgQElucHV0KCkgZmlsdGVyVmFsdWU6IHN0cmluZztcbiAgLyoqXG4gICAqIGJpbmQgdG8gW2lucHV0RmlsdGVyQmx1cl0sIGVtaXRzIHdpdGggKGJsdXIpIG9mIGZpbHRlciBpbnB1dCBib3hcbiAgICovXG4gIEBPdXRwdXQoKSBpbnB1dEZpbHRlckJsdXIgPSBuZXcgRXZlbnRFbWl0dGVyPHN0cmluZz4oKTtcbiAgLyoqXG4gICAqIGJpbmQgdG8gW2ZpbHRlclZhbHVlQ2hhbmdlXSwgZm9yIDItd2F5IGJpbmRpbmcgb2YgZmlsdGVyVmFsdWVcbiAgICovXG4gIEBPdXRwdXQoKSBmaWx0ZXJWYWx1ZUNoYW5nZSA9IG5ldyBFdmVudEVtaXR0ZXI8c3RyaW5nPigpO1xuXG4gIC8qKlxuICAgKiB0cmlnZ2VycyB3aXRoIChibHVyKSBldmVudCwgZW1pdHMgdGhlIChpbnB1dEZpbHRlckJsdXIpIGV2ZW50XG4gICAqL1xuICBvbkZpbHRlclRleHRCbHVyKGV2ZW50KSB7XG4gICAgdGhpcy5pbnB1dEZpbHRlckJsdXIuZW1pdChldmVudCk7XG4gIH1cblxuICAvKipcbiAgICogdHJpZ2dlcnMgd2l0aCAoaW5wdXQpIGV2ZW50LCBlbWl0cyB0aGUgKGZpbHRlclZhbHVlQ2hhbmdlKSBldmVudCBmb3IgMi13YXkgYmluZGluZyBvZiBmaWx0ZXJWYWx1ZVxuICAgKi9cbiAgb25DaGFuZ2UoKSB7XG4gICAgdGhpcy5maWx0ZXJWYWx1ZUNoYW5nZS5lbWl0KHRoaXMuZmlsdGVyVmFsdWUpO1xuICB9XG59XG4iXX0=