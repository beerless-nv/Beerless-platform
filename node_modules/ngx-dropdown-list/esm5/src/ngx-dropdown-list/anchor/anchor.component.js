/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, ElementRef, EventEmitter, Input, Output, ViewChild } from '@angular/core';
import { stopPropagationAndDefault, isNumber } from '../utils/util';
import { DecimalPipe } from '@angular/common';
var AnchorComponent = /** @class */ (function () {
    function AnchorComponent(_decimalPipe) {
        this._decimalPipe = _decimalPipe;
        /**
         * bind to [checkbox] for checking whether the clearance flag should be shown or not.
         */
        this.checkbox = false;
        /**
         * bind to [allowClear] for enabling the clearance (clearance is not avaiable when checkbox is enabled)
         */
        this.allowClear = true;
        /**
         * bind to [openStatus], it's the visibility status of dropdown, for showing the arrow on anchor
         */
        this.openStatus = false;
        /**
         * bind to [disabled] for disabling the anchor
         */
        this.disabled = false;
        /**
         * will be triggered when clicking the anchor
         */
        this.anchorClick = new EventEmitter();
        /**
         * will be triggered when clicking the clearance
         */
        this.clearanceClick = new EventEmitter();
    }
    Object.defineProperty(AnchorComponent.prototype, "showClearanceFlag", {
        /**
         * flag for showing the clearance flag
         */
        get: /**
         * flag for showing the clearance flag
         * @return {?}
         */
        function () {
            return !this.checkbox && this.selectedText && this.allowClear;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AnchorComponent.prototype, "anchorDisplayText", {
        /**
         * the text displays on anchor
         */
        get: /**
         * the text displays on anchor
         * @return {?}
         */
        function () {
            /** @type {?} */
            var anchorDisplayText = this.selectedText ? (this.formatNumber ? (isNumber(this.selectedText) ?
                this._decimalPipe.transform(this.selectedText, '1.0-2') : this.selectedText) :
                this.selectedText) + (this.suffixText ? this.suffixText : '') : this.placeHolder;
            /** @type {?} */
            var charLength = 1;
            if (this.showClearanceFlag && this.anchorLength > 0) {
                charLength = Math.floor((this.anchorLength - 50) / 7);
            }
            else {
                charLength = Math.floor((this.anchorLength - 50) / 7);
            }
            if (anchorDisplayText.length > charLength) {
                anchorDisplayText = anchorDisplayText.slice(0, charLength - 2) + '...';
            }
            return anchorDisplayText;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AnchorComponent.prototype, "anchorClass", {
        /**
         * anchor CSS class
         */
        get: /**
         * anchor CSS class
         * @return {?}
         */
        function () {
            /** @type {?} */
            var anchorClassStatusPart;
            /** @type {?} */
            var anchorClassFontColor;
            if (this.disabled) {
                anchorClassStatusPart = 'selection-anchor-disabled';
                anchorClassFontColor = 'place-holder';
            }
            else {
                if (this.openStatus) {
                    anchorClassStatusPart = 'selection-anchor-open';
                }
                else {
                    anchorClassStatusPart = 'selection-anchor-close';
                }
                if (this.selectedText != null) {
                    anchorClassFontColor = 'selected-item';
                }
                else {
                    anchorClassFontColor = 'place-holder';
                }
            }
            return anchorClassStatusPart + " " + anchorClassFontColor;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * triggered when clicking the anchor
     */
    /**
     * triggered when clicking the anchor
     * @param {?} event
     * @return {?}
     */
    AnchorComponent.prototype.onAnchorClick = /**
     * triggered when clicking the anchor
     * @param {?} event
     * @return {?}
     */
    function (event) {
        this.anchorClick.emit(event);
    };
    /**
     * triggered with (blur) of anchor
     */
    /**
     * triggered with (blur) of anchor
     * @param {?} event
     * @return {?}
     */
    AnchorComponent.prototype.onAnchorBlur = /**
     * triggered with (blur) of anchor
     * @param {?} event
     * @return {?}
     */
    function (event) {
        stopPropagationAndDefault(event);
    };
    /**
     * triggered when clicking the clearance
     */
    /**
     * triggered when clicking the clearance
     * @param {?} event
     * @return {?}
     */
    AnchorComponent.prototype.onClearanceClick = /**
     * triggered when clicking the clearance
     * @param {?} event
     * @return {?}
     */
    function (event) {
        this.clearanceClick.emit(event);
    };
    /**
     * triggered when resizing, get the clientWidth of anchor
     */
    /**
     * triggered when resizing, get the clientWidth of anchor
     * @return {?}
     */
    AnchorComponent.prototype.onResize = /**
     * triggered when resizing, get the clientWidth of anchor
     * @return {?}
     */
    function () {
        this.anchorLength = this.anchorRef ? this.anchorRef.nativeElement ? this.anchorRef.nativeElement.clientWidth : 0 : 0;
    };
    AnchorComponent.decorators = [
        { type: Component, args: [{
                    selector: 'anchor',
                    template: "\n    <span #anchor tabindex=\"2\" [ngClass]=\"anchorClass\" (window:resize)=\"onResize()\"\n          (mousedown)=\"onAnchorClick($event)\" (blur)=\"onAnchorBlur($event)\"> {{anchorDisplayText}}\n      <span #selectionClearance class=\"selection-clearance\" (mousedown)=\"onClearanceClick($event)\" *ngIf=\"showClearanceFlag\">&times;</span>\n    </span>\n  ",
                    providers: [DecimalPipe],
                    styles: ["*,:after,:before{font-size:inherit;font-weight:inherit;font-family:inherit;box-sizing:inherit;background:inherit}.selection-anchor-close:after,.selection-anchor-disabled:after,.selection-anchor-open:after,.vertical-center{position:absolute;top:50%;-webkit-transform:translateY(-50%);transform:translateY(-50%)}.hover-box,.selection-anchor-close:hover{outline:0;box-shadow:0 0 6px #23adff;border-radius:4px}.anchor-box,.selection-anchor,.selection-anchor-close,.selection-anchor-disabled,.selection-anchor-open{height:100%;border-radius:4px;width:100%;position:relative;display:inline-block;padding:8px 12px 5px;border:1px solid;outline:0;box-shadow:inset 0 1px 1px rgba(0,0,0,.075);box-sizing:border-box;white-space:nowrap}.selection-anchor,.selection-anchor-close,.selection-anchor-open{cursor:pointer}.selection-anchor .selection-clearance,.selection-anchor-close .selection-clearance,.selection-anchor-open .selection-clearance{position:absolute;right:35px;font-weight:700}.selection-anchor .selection-clearance:hover,.selection-anchor-close .selection-clearance:hover,.selection-anchor-open .selection-clearance:hover{color:#000}.selection-anchor-close:focus,.selection-anchor-open:focus,.selection-anchor:focus{box-shadow:inset 0 1px 1px rgba(0,0,0,.075),0 0 8px rgba(102,175,233,.6);transition:border-color .15s ease-in-out,box-shadow .15s ease-in-out;border-color:#66afe9}.selection-anchor-disabled{border-color:#ccc;cursor:default;pointer-events:none;background:#f8f8f8;-webkit-filter:opacity(50%);filter:opacity(50%)}.selection-anchor-disabled:after{font-size:12px;content:'\\0023F7';right:10px;padding-bottom:3px}.selection-anchor-open{border-bottom:none;border-bottom-right-radius:0;border-bottom-left-radius:0;border-color:#66afe9}.selection-anchor-open:after{font-size:12px;content:\"\\0023F6\";right:10px;padding-bottom:3px}.selection-anchor-close{border-color:#ccc}.selection-anchor-close:after{font-size:12px;content:'\\0023F7';right:10px;padding-bottom:3px}.place-holder{color:#999}.selected-item{color:#495057}"]
                }] }
    ];
    /** @nocollapse */
    AnchorComponent.ctorParameters = function () { return [
        { type: DecimalPipe }
    ]; };
    AnchorComponent.propDecorators = {
        anchorRef: [{ type: ViewChild, args: ['anchor', { read: ElementRef },] }],
        placeHolder: [{ type: Input }],
        checkbox: [{ type: Input }],
        suffixText: [{ type: Input }],
        allowClear: [{ type: Input }],
        formatNumber: [{ type: Input }],
        selectedText: [{ type: Input }],
        openStatus: [{ type: Input }],
        disabled: [{ type: Input }],
        anchorClick: [{ type: Output }],
        clearanceClick: [{ type: Output }]
    };
    return AnchorComponent;
}());
export { AnchorComponent };
if (false) {
    /**
     * Child element reference of anchor
     * @type {?}
     */
    AnchorComponent.prototype.anchorRef;
    /**
     * bind to [placeHolder] for displaying the place holder string of the anchor.
     * @type {?}
     */
    AnchorComponent.prototype.placeHolder;
    /**
     * bind to [checkbox] for checking whether the clearance flag should be shown or not.
     * @type {?}
     */
    AnchorComponent.prototype.checkbox;
    /**
     * bind to [suffixText] for displaying the suffix of the selected text of anchor
     * @type {?}
     */
    AnchorComponent.prototype.suffixText;
    /**
     * bind to [allowClear] for enabling the clearance (clearance is not avaiable when checkbox is enabled)
     * @type {?}
     */
    AnchorComponent.prototype.allowClear;
    /**
     * bind to [formatNumber] for show formatted number text
     * @type {?}
     */
    AnchorComponent.prototype.formatNumber;
    /**
     * bind to [selectedText] for displaying the selected text on anchor
     * @type {?}
     */
    AnchorComponent.prototype.selectedText;
    /**
     * bind to [openStatus], it's the visibility status of dropdown, for showing the arrow on anchor
     * @type {?}
     */
    AnchorComponent.prototype.openStatus;
    /**
     * bind to [disabled] for disabling the anchor
     * @type {?}
     */
    AnchorComponent.prototype.disabled;
    /**
     * will be triggered when clicking the anchor
     * @type {?}
     */
    AnchorComponent.prototype.anchorClick;
    /**
     * will be triggered when clicking the clearance
     * @type {?}
     */
    AnchorComponent.prototype.clearanceClick;
    /**
     * length of anchor element, used for calculate the string length of the anchor displayed text.
     * @type {?}
     */
    AnchorComponent.prototype.anchorLength;
    /**
     * @type {?}
     * @private
     */
    AnchorComponent.prototype._decimalPipe;
}
//# sourceMappingURL=data:application/json;base64,